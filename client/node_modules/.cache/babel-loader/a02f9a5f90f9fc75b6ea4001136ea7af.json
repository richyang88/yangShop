{"ast":null,"code":"var _jsxFileName = \"/Users/richardyangCB5/Desktop/SEI_23/classWork/yangShop/client/src/components/HelloWorld.js\";\n\n/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react';\nimport axios from 'axios';\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\n\nexport default class HelloWorld extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userList: [] // newUserName:'',\n\n      /* Step 4\n      * Use componentDidMount to retrieve any data to display\n      *   Here you can make calls to your local express server\n      *   or to an external API\n      *   setState can be run here as well\n      *   -REMINDER remember `setState` it is an async function\n      */\n      // componentDidMount() {\n      //     axios.get('/api/helloworld')\n      //         .then((res) => {\n      //             this.setState({message: res.data})\n      //         })\n      // }\n      // componentDidMount() {\n      //     axios.get('/getAllUsers')\n      //         .then((res) => {\n      //             this.setState({name: res.data})\n      //         })\n      // }\n\n    };\n\n    this.refreshUsers = () => {\n      axios.get('/getAllUsers').then(response => {\n        console.log(response);\n        this.setState({\n          userList: response.data.userList.name\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.refreshUsers();\n  } // refreshUsers=()=>{\n  //     axios.get('/getAllUsers')\n  //         .then((response)=>{\n  //             console.log(response)\n  //             this.setState({\n  //                 userList: response.data\n  //             })\n  //             .catch((err)=>{\n  //                 console.log(err)\n  //             })\n  //         })\n  // }\n\n\n  /* Step 5\n  *  The render function manages what is shown in the browser\n  *  TODO: delete the jsx returned\n  *   and replace it with your own custom jsx template\n  *\n  */\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.user));\n  }\n\n}","map":{"version":3,"sources":["/Users/richardyangCB5/Desktop/SEI_23/classWork/yangShop/client/src/components/HelloWorld.js"],"names":["React","Component","axios","HelloWorld","state","userList","refreshUsers","get","then","response","console","log","setState","data","name","catch","err","componentDidMount","render","user"],"mappings":";;AAAA;;;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;;;;;AAIA,eAAe,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAM9CG,KAN8C,GAMtC;AACJC,MAAAA,QAAQ,EAAE,EADN,CAEJ;;AAGJ;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAvBQ,KANsC;;AAAA,SA+C9CC,YA/C8C,GA+CjC,MAAI;AACbJ,MAAAA,KAAK,CAACK,GAAN,CAAU,cAAV,EACKC,IADL,CACWC,QAAD,IAAY;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aAAKG,QAAL,CAAc;AAACP,UAAAA,QAAQ,EAAEI,QAAQ,CAACI,IAAT,CAAcR,QAAd,CAAuBS;AAAlC,SAAd;AACH,OAJL,EAKKC,KALL,CAKYC,GAAD,IAAO;AACVN,QAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACH,OAPL;AAQH,KAxD6C;AAAA;;AA8B9CC,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,YAAL;AACH,GAhC6C,CAkC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAaA;;;;;;AAMAY,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKd,KAAL,CAAWe,IAAhB,CAFJ,CADJ;AAMH;;AAvE6C","sourcesContent":["/* Step 1 import React, { Component } and axios\n *\n */\nimport React, { Component } from 'react'\nimport axios from 'axios'\n\n/* Step 2\n * Rename this class to reflect the component being created\n *\n */\nexport default class HelloWorld extends Component {\n\n    /* Step 3\n    * Create a state for the component to store view data\n    *\n    */\n    state = {\n        userList: [],\n        // newUserName:'',\n    }\n\n    /* Step 4\n    * Use componentDidMount to retrieve any data to display\n    *   Here you can make calls to your local express server\n    *   or to an external API\n    *   setState can be run here as well\n    *   -REMINDER remember `setState` it is an async function\n    */\n    // componentDidMount() {\n    //     axios.get('/api/helloworld')\n    //         .then((res) => {\n    //             this.setState({message: res.data})\n    //         })\n    // }\n    // componentDidMount() {\n    //     axios.get('/getAllUsers')\n    //         .then((res) => {\n    //             this.setState({name: res.data})\n    //         })\n    // }\n    componentDidMount() {\n        this.refreshUsers()\n    }\n\n    // refreshUsers=()=>{\n    //     axios.get('/getAllUsers')\n    //         .then((response)=>{\n    //             console.log(response)\n    //             this.setState({\n    //                 userList: response.data\n    //             })\n    //             .catch((err)=>{\n    //                 console.log(err)\n    //             })\n    //         })\n    // }\n\n    refreshUsers=()=>{\n        axios.get('/getAllUsers')\n            .then((response)=>{\n                console.log(response)\n                this.setState({userList: response.data.userList.name})\n            })\n            .catch((err)=>{\n                console.log(err)\n            })\n    }\n\n    /* Step 5\n    *  The render function manages what is shown in the browser\n    *  TODO: delete the jsx returned\n    *   and replace it with your own custom jsx template\n    *\n    */\n    render() {\n        return (\n            <div>\n                {/* Accessing the value of message from the state object */}\n                <h1>{this.state.user}</h1>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}